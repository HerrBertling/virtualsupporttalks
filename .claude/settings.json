{
  "permissions": {
    "allow": [
      "Bash(. *)",
      "Bash(awk *)",
      "Bash(awk:*)",
      "Bash(basename *)",
      "Bash(bg*)",
      "Bash(cat -n *)",
      "Bash(cat *)",
      "Bash(cat:*)",
      "Bash(cd * && *)",
      "Bash(cd *)",
      "Bash(chmod *)",
      "Bash(chown *)",
      "Bash(cp -a *)",
      "Bash(cp -p *)",
      "Bash(cp -r *)",
      "Bash(cp *)",
      "Bash(curl --data *)",
      "Bash(curl --data-binary *)",
      "Bash(curl --header *)",
      "Bash(curl --include *)",
      "Bash(curl --insecure *)",
      "Bash(curl --request *)",
      "Bash(curl --user *)",
      "Bash(curl --verbose *)",
      "Bash(curl --write-out *)",
      "Bash(curl -d *)",
      "Bash(curl -f *)",
      "Bash(curl -H '*' *)",
      "Bash(curl -H \"*\" *)",
      "Bash(curl -i *)",
      "Bash(curl -k *)",
      "Bash(curl -L *)",
      "Bash(curl -o *)",
      "Bash(curl -O *)",
      "Bash(curl -s *)",
      "Bash(curl -S *)",
      "Bash(curl -u *)",
      "Bash(curl -v *)",
      "Bash(curl -w *)",
      "Bash(curl -X DELETE *)",
      "Bash(curl -X GET *)",
      "Bash(curl -X PATCH *)",
      "Bash(curl -X POST *)",
      "Bash(curl -X PUT *)",
      "Bash(curl * | grep*)",
      "Bash(curl * | head*)",
      "Bash(curl * | jq*)",
      "Bash(curl * | tail*)",
      "Bash(curl *)",
      "Bash(curl:*)",
      "Bash(cut *)",
      "Bash(diff *)",
      "Bash(dirname *)",
      "Bash(do)",
      "Bash(done)",
      "Bash(echo '$*')",
      "Bash(echo *)",
      "Bash(echo \"$*\")",
      "Bash(echo \"Exit code: $?\")",
      "Bash(echo $*)",
      "Bash(egrep *)",
      "Bash(env | grep*)",
      "Bash(env*)",
      "Bash(export *)",
      "Bash(export MIX_ENV=test)",
      "Bash(fg*)",
      "Bash(fgrep *)",
      "Bash(fi)",
      "Bash(find . -name *)",
      "Bash(find . -path *)",
      "Bash(find . -type *)",
      "Bash(find *)",
      "Bash(find:*)",
      "Bash(for file in test/trox/workouts/block_test.exs test/trox/workouts/block_item_test.exs test/trox/workouts/metric_test.exs test/trox_web/controllers/api/export_controller_test.exs test/trox/workouts/template_copying_test.exs)",
      "Bash(git add -A*)",
      "Bash(git add -u*)",
      "Bash(git add .*)",
      "Bash(git add *)",
      "Bash(git add:*)",
      "Bash(git blame *)",
      "Bash(git branch -a*)",
      "Bash(git branch -d *)",
      "Bash(git branch -D *)",
      "Bash(git branch*)",
      "Bash(git checkout -b *)",
      "Bash(git checkout *)",
      "Bash(git checkout:*)",
      "Bash(git clean *)",
      "Bash(git clone *)",
      "Bash(git commit --amend*)",
      "Bash(git commit -am *)",
      "Bash(git commit -m *)",
      "Bash(git commit:*)",
      "Bash(git config *)",
      "Bash(git diff --staged*)",
      "Bash(git diff HEAD*)",
      "Bash(git diff*)",
      "Bash(git fetch --all*)",
      "Bash(git fetch*)",
      "Bash(git init*)",
      "Bash(git log --graph*)",
      "Bash(git log --oneline*)",
      "Bash(git log:*)",
      "Bash(git log*)",
      "Bash(git merge *)",
      "Bash(git pull origin *)",
      "Bash(git pull*)",
      "Bash(git push -u origin *)",
      "Bash(git push origin *)",
      "Bash(git push:*)",
      "Bash(git push*)",
      "Bash(git rebase *)",
      "Bash(git remote -v*)",
      "Bash(git remote *)",
      "Bash(git remote add *)",
      "Bash(git remote set-url *)",
      "Bash(git reset *)",
      "Bash(git restore:*)",
      "Bash(git show *)",
      "Bash(git stash list*)",
      "Bash(git stash pop*)",
      "Bash(git stash*)",
      "Bash(git status*)",
      "Bash(git tag *)",
      "Bash(grep -A* -B* *)",
      "Bash(grep -E *)",
      "Bash(grep -i *)",
      "Bash(grep -n *)",
      "Bash(grep -r *)",
      "Bash(grep -v *)",
      "Bash(grep *)",
      "Bash(head -*)",
      "Bash(head -n *)",
      "Bash(head *)",
      "Bash(if [ -f \"$file\" ])",
      "Bash(jobs*)",
      "Bash(kill -9 *)",
      "Bash(kill *)",
      "Bash(killall *)",
      "Bash(less *)",
      "Bash(ll*)",
      "Bash(ls -a*)",
      "Bash(ls -l*)",
      "Bash(ls -la */)",
      "Bash(ls -la*)",
      "Bash(ls -lh*)",
      "Bash(ls*)",
      "Bash(lsof:*)",
      "Bash(lsof:*)",
      "Bash(make:*)",
      "Bash(mkdir -p *)",
      "Bash(mkdir *)",
      "Bash(more *)",
      "Bash(mv *)",
      "Bash(node --version*)",
      "Bash(node -e *)",
      "Bash(node -v*)",
      "Bash(node *.js*)",
      "Bash(node *)",
      "Bash(node scripts/*)",
      "Bash(nohup *)",
      "Bash(npm --prefix assets run build)",
      "Bash(npm --prefix assets run build*)",
      "Bash(npm --prefix assets run)",
      "Bash(npm *)",
      "Bash(npm audit:*)",
      "Bash(npm audit*)",
      "Bash(npm build*)",
      "Bash(npm ci*)",
      "Bash(npm fund*)",
      "Bash(npm init*)",
      "Bash(npm install --save-dev*)",
      "Bash(npm install --save*)",
      "Bash(npm install -g*)",
      "Bash(npm install:*)",
      "Bash(npm install*)",
      "Bash(npm list*)",
      "Bash(npm run *)",
      "Bash(npm run build:*)",
      "Bash(npm run build*)",
      "Bash(npm run dev*)",
      "Bash(npm run format:*)",
      "Bash(npm run lint:*)",
      "Bash(npm run lint*)",
      "Bash(npm run routes:*)",
      "Bash(npm run test:e2e:*)",
      "Bash(npm run test:run:*)",
      "Bash(npm run test*)",
      "Bash(npm run typecheck:*)",
      "Bash(npm start*)",
      "Bash(npm test)",
      "Bash(npm test*)",
      "Bash(npm update*)",
      "Bash(npx @biomejs/biome check:*)",
      "Bash(npx @playwright/test:*)",
      "Bash(npx *)",
      "Bash(npx biome check:*)",
      "Bash(npx playwright test:*)",
      "Bash(npx:*)",
      "Bash(pgrep *)",
      "Bash(pkill *)",
      "Bash(pkill:*)",
      "Bash(popd*)",
      "Bash(printenv | grep*)",
      "Bash(printenv*)",
      "Bash(ps -ef*)",
      "Bash(ps *)",
      "Bash(ps | grep*)",
      "Bash(ps aux*)",
      "Bash(pushd *)",
      "Bash(pwd*)",
      "Bash(readlink *)",
      "Bash(realpath *)",
      "Bash(rm -f *)",
      "Bash(rm -r *)",
      "Bash(rm -rf *)",
      "Bash(rm *)",
      "Bash(rmdir *)",
      "Bash(sed -e *)",
      "Bash(sed -i *)",
      "Bash(sed -n *)",
      "Bash(sed *)",
      "Bash(set*)",
      "Bash(sleep *)",
      "Bash(sort *)",
      "Bash(source *)",
      "Bash(tail -*)",
      "Bash(tail -f *)",
      "Bash(tail -n *)",
      "Bash(tail *)",
      "Bash(tee:*)",
      "Bash(then)",
      "Bash(touch *)",
      "Bash(tree *)",
      "Bash(uniq *)",
      "Bash(unset *)",
      "Bash(wait*)",
      "Bash(wc -l *)",
      "Bash(wc *)",
      "Bash(xargs -r kill -9)",
      "Bash(xargs biome check:*)",
      "Bash(xargs cat:*)",
      "Bash(xargs kill:*)",
      "Bash(xargs npx biome check:*)",
      "WebFetch(domain:biomejs.dev)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:ui.shadcn.com)",
      "WebSearch"
    ],
    "deny": [],
    "ask": []
  }
}